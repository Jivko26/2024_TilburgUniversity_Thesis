
Best Model Config: {'optimizer_name': 'sgd', 'batch_size': 32, 'learning_rate': 0.01, 'num_epochs': 60, 'use_dropout': False, 'dropout_rate': 0.3, 'use_batch_norm': False, 'momentum': 0.8}, with Best Validation Accuracy: 69.23076923076923

DualBranch1DCNN(
  (hrv_branch): Sequential(
    (0): Conv1d(1, 16, kernel_size=(5,), stride=(2,))
    (1): ReLU()
    (2): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv1d(16, 32, kernel_size=(5,), stride=(2,))
    (4): ReLU()
    (5): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Flatten(start_dim=1, end_dim=-1)
    (7): Linear(in_features=197280, out_features=128, bias=True)
    (8): ReLU()
  )
  (activity_branch): Sequential(
    (0): Conv1d(1, 16, kernel_size=(5,), stride=(2,))
    (1): ReLU()
    (2): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv1d(16, 32, kernel_size=(5,), stride=(2,))
    (4): ReLU()
    (5): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Flatten(start_dim=1, end_dim=-1)
    (7): Linear(in_features=197280, out_features=128, bias=True)
    (8): ReLU()
  )
  (final_layers): Sequential(
    (0): Linear(in_features=256, out_features=128, bias=True)
    (1): ReLU()
    (final_output): Linear(in_features=128, out_features=1, bias=True)
  )
)

Test Loss: 0.0013, Test Accuracy: 100.00%, Precision: 1.00, Recall: 1.00
0.0013350947992876172 1.0 1.0 1.0